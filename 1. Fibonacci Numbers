// Leetcode - 509
The Fibonacci numbers, commonly denoted F(n) form a sequence, called the Fibonacci sequence, such that each number is the sum of the two preceding ones, starting from 0 and 1. 
That is,
F(0) = 0, F(1) = 1
F(n) = F(n - 1) + F(n - 2), for n > 1.
Given n, calculate F(n).

/*---------------------------------------------------------------------------Memoization------------------------------------------------------------------------------------*/
class Solution {
    public int fib(int n) {
    
        int memo[] = new int[n+1];
        Arrays.fill(memo, -1);
        return fibo(n, memo);
        
    }

    public int fibo(int n, int[] memo){
    
        if(n <= 1) return n;
        if(memo[n] != -1) return memo[n];                // check memo contain value of n or not, if yes return it
        memo[n] = fibo(n-1, memo) + fibo(n-2, memo);     // if not calculate it and store in memo
        return memo[n];
        
    }
}

/*---------------------------------------------------------------------------Tabulation-------------------------------------------------------------------------------------*/
class Solution {
    public int fib(int n) {
        // Tabulation
        if(n == 0) return 0;
        if(n == 1) return 1;
        int dp[] = new int[n];
        dp[0] = 1;
        dp[1] = 1;
        for(int i = 2; i < n; i++){
            dp[i] = dp[i-1] + dp[i-2];
        }
        return dp[n-1];
    }
}
