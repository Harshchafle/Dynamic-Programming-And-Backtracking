class Solution {
    public int minFallingPathSum(int[][] mat) {
        int n = mat.length;
        int ans = Integer.MAX_VALUE;
        
        if(n == 1) return mat[0][0];
        int dp[][] = new int[n][n];
        for(int i = 0; i < n; i++){
            for(int j = 0; j < n; j++){
                if(i == 0) dp[i][j] = mat[i][j];
                else if(j == 0) dp[i][j] = mat[i][j] + Math.min(dp[i-1][j], dp[i-1][j+1]);
                else if(j > 0 && j < n-1) dp[i][j] = mat[i][j] + Math.min(dp[i-1][j-1], Math.min(dp[i-1][j], dp[i-1][j+1]));
                else if(j == n-1) dp[i][j] = mat[i][j] + Math.min(dp[i-1][j-1], dp[i-1][j]);
            }
        }
        return Arrays.stream(dp[n-1]).min().getAsInt();
    }
}
